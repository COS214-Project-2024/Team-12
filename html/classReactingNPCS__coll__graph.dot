digraph "ReactingNPCS"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ReactingNPCS\n||+ ReactingNPCS()\l+ ~ReactingNPCS()\l+ ReactingNPCS()\l+ update()\l+ changeState()\l+ getState()\l+ clone()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Concrete observer class representing an NPC that reacts to state changes."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{NPCObserver\n||+ update()\l+ clone()\l+ ~NPCObserver()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classNPCObserver.html",tooltip="Abstract base class for NPC observers."];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -state" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{NPCState\n||+ handle()\l+ getStateName()\l+ clone()\l+ ~NPCState()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classNPCState.html",tooltip="Abstract base class representing a state in the NPC state machine."];
}
